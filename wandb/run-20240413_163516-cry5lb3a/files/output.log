Using device: cuda
NVIDIA RTX A5000
Starting...
/home/raid/Desktop/Akhil/AirSim-PyTorch-Drone-DDQN-Agent/DQRN_net.py:84: TracerWarning: torch.tensor results are registered as constants in the trace. You can safely ignore this warning if you use this function to create tensors out of constant variables that would be the same every time you call this function. In any other case, this might cause the trace to be incorrect.
  x = torch.tensor(x, dtype=torch.float32)
/home/raid/Desktop/Akhil/AirSim-PyTorch-Drone-DDQN-Agent/DQRN_net.py:84: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  x = torch.tensor(x, dtype=torch.float32)
/home/raid/Desktop/Akhil/AirSim-PyTorch-Drone-DDQN-Agent/DQRN_net.py:85: TracerWarning: Converting a tensor to a Python boolean might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  if x.size(-1) != 84 or x.size(-2) != 84:
----------------------------------------------------------------------------------------
Training will start after  89  steps.
----------------------------------------------------------------------------------------
Training will start after  78  steps.
----------------------------------------------------------------------------------------
Training will start after  67  steps.
----------------------------------------------------------------------------------------
Training will start after  56  steps.
Traceback (most recent call last):
  File "/home/raid/Desktop/Akhil/AirSim-PyTorch-Drone-DDQN-Agent/run.py", line 11, in <module>
    ddqn_agent.train()
  File "/home/raid/Desktop/Akhil/AirSim-PyTorch-Drone-DDQN-Agent/ddqn_lstm_agent.py", line 254, in train
    next_state, reward, done, _ = self.env.step(action)
  File "/home/raid/Desktop/Akhil/AirSim-PyTorch-Drone-DDQN-Agent/env.py", line 48, in step
    time.sleep(0.5)
KeyboardInterrupt