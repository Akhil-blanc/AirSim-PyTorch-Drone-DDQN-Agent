Using device: cuda
NVIDIA RTX A5000
Traceback (most recent call last):
  File "/home/raid/Desktop/Akhil/AirSim-PyTorch-Drone-DDQN-Agent/run.py", line 10, in <module>
    ddqn_agent = DDQN_Agent_LSTM(useDepth=False)
  File "/home/raid/Desktop/Akhil/AirSim-PyTorch-Drone-DDQN-Agent/ddqn_lstm_agent.py", line 103, in __init__
    writer.add_graph(self.policy, tensor)
  File "/home/raid/miniconda3/envs/airsim_env/lib/python3.9/site-packages/torch/utils/tensorboard/writer.py", line 889, in add_graph
    graph(model, input_to_model, verbose, use_strict_trace)
  File "/home/raid/miniconda3/envs/airsim_env/lib/python3.9/site-packages/torch/utils/tensorboard/_pytorch_graph.py", line 330, in graph
    trace = torch.jit.trace(model, args, strict=use_strict_trace)
  File "/home/raid/miniconda3/envs/airsim_env/lib/python3.9/site-packages/torch/jit/_trace.py", line 806, in trace
    return trace_module(
  File "/home/raid/miniconda3/envs/airsim_env/lib/python3.9/site-packages/torch/jit/_trace.py", line 1074, in trace_module
    module._c._create_method_from_trace(
  File "/home/raid/miniconda3/envs/airsim_env/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/raid/miniconda3/envs/airsim_env/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/raid/miniconda3/envs/airsim_env/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1501, in _slow_forward
    result = self.forward(*input, **kwargs)
  File "/home/raid/Desktop/Akhil/AirSim-PyTorch-Drone-DDQN-Agent/DQRN_net.py", line 84, in forward
    x = F.interpolate(x, size=(x.size(1),x.size(2),84, 84))
  File "/home/raid/miniconda3/envs/airsim_env/lib/python3.9/site-packages/torch/nn/functional.py", line 3934, in interpolate
    raise ValueError(
ValueError: Input and output must have the same number of spatial dimensions, but got input with spatial dimensions of [tensor(1), tensor(84), tensor(84)] and output size of (tensor(7), tensor(1), 84, 84). Please provide input tensor in (N, C, d1, d2, ...,dK) format and output size in (o1, o2, ...,oK) format.